"use strict";
/******************************************************************************
 * This file was generated by langium-cli 1.0.0.
 * DO NOT EDIT MANUALLY!
 ******************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimpleLGrammar = void 0;
var langium_1 = require("langium");
var loadedSimpleLGrammar;
var SimpleLGrammar = function () { return loadedSimpleLGrammar !== null && loadedSimpleLGrammar !== void 0 ? loadedSimpleLGrammar : (loadedSimpleLGrammar = (0, langium_1.loadGrammarFromJson)("{\n  \"$type\": \"Grammar\",\n  \"isDeclared\": true,\n  \"name\": \"SimpleL\",\n  \"rules\": [\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"Model\",\n      \"entry\": true,\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"functionDefs\",\n            \"operator\": \"+=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@16\"\n              },\n              \"arguments\": []\n            },\n            \"cardinality\": \"*\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"statements\",\n            \"operator\": \"+=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@4\"\n              },\n              \"arguments\": []\n            },\n            \"cardinality\": \"*\"\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"Bloc\",\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"{\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"statements\",\n            \"operator\": \"+=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@4\"\n              },\n              \"arguments\": []\n            },\n            \"cardinality\": \"*\"\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"}\"\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"ParallelBloc\",\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"|\"\n          },\n          {\n            \"$type\": \"Group\",\n            \"elements\": [\n              {\n                \"$type\": \"Keyword\",\n                \"value\": \"|\"\n              },\n              {\n                \"$type\": \"Assignment\",\n                \"feature\": \"statements\",\n                \"operator\": \"+=\",\n                \"terminal\": {\n                  \"$type\": \"RuleCall\",\n                  \"rule\": {\n                    \"$ref\": \"#/rules@4\"\n                  },\n                  \"arguments\": []\n                }\n              }\n            ],\n            \"cardinality\": \"*\"\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"|\"\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"PeriodicBloc\",\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"every\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"time\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@20\"\n              },\n              \"arguments\": []\n            }\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"ms\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"bloc\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@1\"\n              },\n              \"arguments\": []\n            }\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"Statement\",\n      \"definition\": {\n        \"$type\": \"Alternatives\",\n        \"elements\": [\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@12\"\n            },\n            \"arguments\": []\n          },\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@5\"\n            },\n            \"arguments\": []\n          },\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@14\"\n            },\n            \"arguments\": []\n          },\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@1\"\n            },\n            \"arguments\": []\n          },\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@2\"\n            },\n            \"arguments\": []\n          },\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@3\"\n            },\n            \"arguments\": []\n          },\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@10\"\n            },\n            \"arguments\": []\n          },\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@11\"\n            },\n            \"arguments\": []\n          },\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@17\"\n            },\n            \"arguments\": []\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"Expr\",\n      \"definition\": {\n        \"$type\": \"Alternatives\",\n        \"elements\": [\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@15\"\n            },\n            \"arguments\": []\n          },\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@13\"\n            },\n            \"arguments\": []\n          },\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@6\"\n            },\n            \"arguments\": []\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"BooleanExpression\",\n      \"definition\": {\n        \"$type\": \"Alternatives\",\n        \"elements\": [\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@8\"\n            },\n            \"arguments\": []\n          },\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@9\"\n            },\n            \"arguments\": []\n          },\n          {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@7\"\n            },\n            \"arguments\": []\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"BooleanConst\",\n      \"definition\": {\n        \"$type\": \"Assignment\",\n        \"feature\": \"value\",\n        \"operator\": \"=\",\n        \"terminal\": {\n          \"$type\": \"Alternatives\",\n          \"elements\": [\n            {\n              \"$type\": \"Keyword\",\n              \"value\": \"true\"\n            },\n            {\n              \"$type\": \"Keyword\",\n              \"value\": \"false\"\n            }\n          ]\n        }\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"Conjunction\",\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"(\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"lhs\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@6\"\n              },\n              \"arguments\": []\n            }\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"&&\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"rhs\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@6\"\n              },\n              \"arguments\": []\n            }\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \")\"\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"Disjunction\",\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"(\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"lhs\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@6\"\n              },\n              \"arguments\": []\n            }\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"||\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"rhs\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@6\"\n              },\n              \"arguments\": []\n            }\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \")\"\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"While\",\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"while\"\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"(\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"cond\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@15\"\n              },\n              \"arguments\": []\n            }\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \")\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"body\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@1\"\n              },\n              \"arguments\": []\n            }\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"If\",\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"if\"\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"(\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"cond\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@15\"\n              },\n              \"arguments\": []\n            }\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \")\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"then\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@1\"\n              },\n              \"arguments\": []\n            }\n          },\n          {\n            \"$type\": \"Group\",\n            \"elements\": [\n              {\n                \"$type\": \"Keyword\",\n                \"value\": \"else\"\n              },\n              {\n                \"$type\": \"Assignment\",\n                \"feature\": \"else\",\n                \"operator\": \"=\",\n                \"terminal\": {\n                  \"$type\": \"RuleCall\",\n                  \"rule\": {\n                    \"$ref\": \"#/rules@1\"\n                  },\n                  \"arguments\": []\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"Variable\",\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"var\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"name\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@19\"\n              },\n              \"arguments\": []\n            }\n          },\n          {\n            \"$type\": \"Group\",\n            \"elements\": [\n              {\n                \"$type\": \"Keyword\",\n                \"value\": \"=\"\n              },\n              {\n                \"$type\": \"Assignment\",\n                \"feature\": \"initialValue\",\n                \"operator\": \"=\",\n                \"terminal\": {\n                  \"$type\": \"RuleCall\",\n                  \"rule\": {\n                    \"$ref\": \"#/rules@20\"\n                  },\n                  \"arguments\": []\n                }\n              }\n            ],\n            \"cardinality\": \"?\"\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"Plus\",\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"(\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"left\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@5\"\n              },\n              \"arguments\": []\n            }\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"+\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"right\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@5\"\n              },\n              \"arguments\": []\n            }\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \")\"\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"Assignment\",\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"variable\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"CrossReference\",\n              \"type\": {\n                \"$ref\": \"#/rules@12\"\n              },\n              \"terminal\": {\n                \"$type\": \"RuleCall\",\n                \"rule\": {\n                  \"$ref\": \"#/rules@19\"\n                },\n                \"arguments\": []\n              },\n              \"deprecatedSyntax\": false\n            }\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"=\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"expr\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@5\"\n              },\n              \"arguments\": []\n            }\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"VarRef\",\n      \"definition\": {\n        \"$type\": \"Assignment\",\n        \"feature\": \"theVar\",\n        \"operator\": \"=\",\n        \"terminal\": {\n          \"$type\": \"CrossReference\",\n          \"type\": {\n            \"$ref\": \"#/rules@12\"\n          },\n          \"terminal\": {\n            \"$type\": \"RuleCall\",\n            \"rule\": {\n              \"$ref\": \"#/rules@19\"\n            },\n            \"arguments\": []\n          },\n          \"deprecatedSyntax\": false\n        }\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"FunctionDef\",\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"function\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"name\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@19\"\n              },\n              \"arguments\": []\n            }\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"(\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"params\",\n            \"operator\": \"+=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@19\"\n              },\n              \"arguments\": []\n            },\n            \"cardinality\": \"*\"\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \")\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"body\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@1\"\n              },\n              \"arguments\": []\n            }\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"ParserRule\",\n      \"name\": \"FunctionCall\",\n      \"definition\": {\n        \"$type\": \"Group\",\n        \"elements\": [\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"theFunction\",\n            \"operator\": \"=\",\n            \"terminal\": {\n              \"$type\": \"CrossReference\",\n              \"type\": {\n                \"$ref\": \"#/rules@16\"\n              },\n              \"terminal\": {\n                \"$type\": \"RuleCall\",\n                \"rule\": {\n                  \"$ref\": \"#/rules@19\"\n                },\n                \"arguments\": []\n              },\n              \"deprecatedSyntax\": false\n            }\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \"(\"\n          },\n          {\n            \"$type\": \"Assignment\",\n            \"feature\": \"args\",\n            \"operator\": \"+=\",\n            \"terminal\": {\n              \"$type\": \"RuleCall\",\n              \"rule\": {\n                \"$ref\": \"#/rules@5\"\n              },\n              \"arguments\": []\n            },\n            \"cardinality\": \"*\"\n          },\n          {\n            \"$type\": \"Keyword\",\n            \"value\": \")\"\n          }\n        ]\n      },\n      \"definesHiddenTokens\": false,\n      \"entry\": false,\n      \"fragment\": false,\n      \"hiddenTokens\": [],\n      \"parameters\": [],\n      \"wildcard\": false\n    },\n    {\n      \"$type\": \"TerminalRule\",\n      \"hidden\": true,\n      \"name\": \"WS\",\n      \"definition\": {\n        \"$type\": \"RegexToken\",\n        \"regex\": \"\\\\s+\"\n      },\n      \"fragment\": false\n    },\n    {\n      \"$type\": \"TerminalRule\",\n      \"name\": \"ID\",\n      \"definition\": {\n        \"$type\": \"RegexToken\",\n        \"regex\": \"[_a-zA-Z][\\\\w_]*\"\n      },\n      \"fragment\": false,\n      \"hidden\": false\n    },\n    {\n      \"$type\": \"TerminalRule\",\n      \"name\": \"INT\",\n      \"type\": {\n        \"$type\": \"ReturnType\",\n        \"name\": \"number\"\n      },\n      \"definition\": {\n        \"$type\": \"RegexToken\",\n        \"regex\": \"[0-9]+\"\n      },\n      \"fragment\": false,\n      \"hidden\": false\n    },\n    {\n      \"$type\": \"TerminalRule\",\n      \"name\": \"STRING\",\n      \"definition\": {\n        \"$type\": \"RegexToken\",\n        \"regex\": \"\\\"[^\\\"]*\\\"|'[^']*'\"\n      },\n      \"fragment\": false,\n      \"hidden\": false\n    },\n    {\n      \"$type\": \"TerminalRule\",\n      \"hidden\": true,\n      \"name\": \"ML_COMMENT\",\n      \"definition\": {\n        \"$type\": \"RegexToken\",\n        \"regex\": \"\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/\"\n      },\n      \"fragment\": false\n    },\n    {\n      \"$type\": \"TerminalRule\",\n      \"hidden\": true,\n      \"name\": \"SL_COMMENT\",\n      \"definition\": {\n        \"$type\": \"RegexToken\",\n        \"regex\": \"\\\\/\\\\/[^\\\\n\\\\r]*\"\n      },\n      \"fragment\": false\n    }\n  ],\n  \"definesHiddenTokens\": false,\n  \"hiddenTokens\": [],\n  \"imports\": [],\n  \"interfaces\": [],\n  \"types\": [],\n  \"usedGrammars\": []\n}")); };
exports.SimpleLGrammar = SimpleLGrammar;
