semantics ParLang

import "./ParLang/src/language/par-lang.langium"

open Program {
        when starts 
    -------------------------- startsProgram
      <this,σ> ~> <stmt,σ>

        when <stmt,σ> 
    -------------------------- finishProgram
      <this,σ> ~> terminates
}

open Seq{
        when starts
    ------------------------ startsLhsSeq
      <this,σ> ~> <lhs,σ>

        when <lhs,σ>
    ------------------------ startsRhsSeq
      <this,σ> ~> <rhs,σ>

        when <rhs,σ>
    ------------------------ finishSeq
      <this,σ> ~> terminates
}

open Par{
              when starts
    --------------------------------- startsPar
      <this,σ> ~> <lhs,σ> || <rhs,σ>

      when (<lhs,σ> ^ <rhs,σ>)
    ---------------------------       finishPar
        <this,σ> ~> terminates
}

open Perio{
   var blocTrigger: Timer = p;

              when starts
      -------------------------------   perioStart
        <this,σ> ~> <blocTrigger,σ>
  
              when <blocTrigger,σ>
      -------------------------------------------   perioExpires
        <this,σ> ~> <stmt,σ> || <blocTrigger,σ>
                  
}


open Stmt1  {

  var fakeState:integer = 0;
        when starts
    ---------------------------------------- fugaceStmt1
    <this,σ> ~> fakeState := fakeState + 1;
                terminates
}

open Stmt2  {
        when starts
    ------------------------ fugaceStmt2
    <this,σ> ~> terminates
}